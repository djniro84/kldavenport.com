<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Time Series on Kevin Davenport Engineering &amp; ML blog</title>
    <link>https://kldavenport.netlify.com/tags/time-series/</link>
    <description>Recent content in Time Series on Kevin Davenport Engineering &amp; ML blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Jan 2015 11:54:26 -0800</lastBuildDate>
    
	<atom:link href="https://kldavenport.netlify.com/tags/time-series/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The 35 Hour Work Week with Python</title>
      <link>https://kldavenport.netlify.com/the-35-hour-work-week/</link>
      <pubDate>Sat, 17 Jan 2015 11:54:26 -0800</pubDate>
      
      <guid>https://kldavenport.netlify.com/the-35-hour-work-week/</guid>
      <description>I was prompted to write this post after reading the NYT’s In France, New Review of 35-Hour Workweek. For those not familiar with the 35-hour workweek, France adopted it in February 2000 with the suppport of then Prime Minister Lionel Jospin and the Minister of Labour Martine Aubry. Simply stated, the goal was to increase quality of life by reducing the work hour per worker ratio by requiring corporations to hire more workers to maintain the same work output as before.</description>
    </item>
    
    <item>
      <title>Rolling Correlation and Regression</title>
      <link>https://kldavenport.netlify.com/rolling-correlation-and-regression/</link>
      <pubDate>Thu, 17 Apr 2014 11:54:26 -0800</pubDate>
      
      <guid>https://kldavenport.netlify.com/rolling-correlation-and-regression/</guid>
      <description>Today’s article will showcase a subset of Pandas’ time-series modeling capabilities. I’ll be using financial data to demonstrate the capabilities, however, the functions can be applied to any time-series data (application logs, netflow, bio-metrics, etc). The focus will be on moving or sliding window methods. These dynamic models account for time-dependent changes for any given state in a system whereas steady-state or static models are time-invariant as they naively calculate the system in equilibrium.</description>
    </item>
    
  </channel>
</rss>